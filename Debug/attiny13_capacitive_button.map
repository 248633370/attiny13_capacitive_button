Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o (exit)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Discarded input sections

 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o
 .group         0x0000000000000000        0x8 ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny13.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x162
 *(.vectors)
 .vectors       0x0000000000000000       0x14 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000014                . = ALIGN (0x2)
                0x0000000000000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000014        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000014                __trampolines_end = .
 *(.progmem*)
                0x0000000000000014                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000014                __ctors_start = .
 *(.ctors)
                0x0000000000000014                __ctors_end = .
                0x0000000000000014                __dtors_start = .
 *(.dtors)
                0x0000000000000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000014        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
                0x0000000000000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000014        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000001c       0x10 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000001c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000002c        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
 *(.init9)
 *(.text)
 .text          0x0000000000000030        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
                0x0000000000000030                __vector_1
                0x0000000000000030                __bad_interrupt
                0x0000000000000030                __vector_6
                0x0000000000000030                __vector_3
                0x0000000000000030                __vector_7
                0x0000000000000030                __vector_5
                0x0000000000000030                __vector_4
                0x0000000000000030                __vector_9
                0x0000000000000030                __vector_2
                0x0000000000000030                __vector_8
 .text          0x0000000000000032        0x0 ./main.o
 .text          0x0000000000000032        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000032        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000032                . = ALIGN (0x2)
 *(.text.*)
 .text.pwm_setup
                0x0000000000000032       0x72 ./main.o
                0x0000000000000032                pwm_setup
 .text.adc_setup
                0x00000000000000a4       0x56 ./main.o
                0x00000000000000a4                adc_setup
 .text.pson_switch
                0x00000000000000fa       0x56 ./main.o
                0x00000000000000fa                pson_switch
 .text.main     0x0000000000000150        0xe ./main.o
                0x0000000000000150                main
 .text.libgcc.mul
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000015e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000015e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x000000000000015e                exit
                0x000000000000015e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000015e        0x4 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000162                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000162
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x2
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.atx_status
                0x0000000000800060        0x1 ./main.o
                0x0000000000800060                atx_status
 .bss.full_light
                0x0000000000800061        0x1 ./main.o
                0x0000000000800061                full_light
 *(COMMON)
                0x0000000000800062                PROVIDE (__bss_end, .)
                0x0000000000000162                __data_load_start = LOADADDR (.data)
                0x0000000000000162                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800062        0x0
                0x0000000000800062                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800062                PROVIDE (__noinit_end, .)
                0x0000000000800062                _end = .
                0x0000000000800062                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny13.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x38
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x38 ./main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x112
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x112 ./main.o

.debug_abbrev   0x0000000000000000       0xa4
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xa4 ./main.o

.debug_line     0x0000000000000000      0x16d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x16d ./main.o

.debug_frame    0x0000000000000000       0x94
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x94 ./main.o

.debug_str      0x0000000000000000     0x4f7f
 *(.debug_str)
 .debug_str     0x0000000000000000     0x4f7f ./main.o
                                       0x4ff2 (size before relaxing)

.debug_loc      0x0000000000000000       0xec
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0xec ./main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x28
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x28 ./main.o

.debug_macro    0x0000000000000000     0x179f
 *(.debug_macro)
 .debug_macro   0x0000000000000000       0x9f ./main.o
 .debug_macro   0x000000000000009f      0xa30 ./main.o
 .debug_macro   0x0000000000000acf       0x10 ./main.o
 .debug_macro   0x0000000000000adf      0x1ad ./main.o
 .debug_macro   0x0000000000000c8c      0x293 ./main.o
 .debug_macro   0x0000000000000f1f       0x9e ./main.o
 .debug_macro   0x0000000000000fbd      0x573 ./main.o
 .debug_macro   0x0000000000001530       0xc2 ./main.o
 .debug_macro   0x00000000000015f2       0xa2 ./main.o
 .debug_macro   0x0000000000001694       0x34 ./main.o
 .debug_macro   0x00000000000016c8       0x18 ./main.o
 .debug_macro   0x00000000000016e0       0x34 ./main.o
 .debug_macro   0x0000000000001714       0x22 ./main.o
 .debug_macro   0x0000000000001736       0x69 ./main.o
OUTPUT(attiny13_capacitive_button.elf elf32-avr)
LOAD linker stubs
